buildscript {
	ext {
		grailsVersion = project.grailsVersion
	}
	repositories {
		mavenLocal()
		maven { url "https://repo.grails.org/grails/core" }
	}
	dependencies {
		classpath "org.grails:grails-gradle-plugin:$grailsVersion"
	}
}

plugins {
	id "io.spring.dependency-management" version "0.5.1.RELEASE"
	id "com.jfrog.bintray" version "1.1"
}

version "3.0.4"
group "org.grails.plugins"

apply plugin: 'maven-publish'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: "spring-boot"
apply plugin: "org.grails.grails-plugin"
apply plugin: "org.grails.grails-gsp"
// Used for publishing to central repository, remove if not needed
apply from: 'https://raw.githubusercontent.com/grails/grails-profile-repository/master/profiles/plugin/templates/grailsCentralPublishing.gradle'
apply from: 'https://raw.githubusercontent.com/grails/grails-profile-repository/master/profiles/plugin/templates/bintrayPublishing.gradle'

ext {
	grailsVersion = project.grailsVersion
	gradleWrapperVersion = project.gradleWrapperVersion
}

sourceCompatibility = 1.7
targetCompatibility = 1.7


repositories {
	mavenLocal()
	mavenCentral()
	maven { url "https://repo.grails.org/grails/core" }
}

dependencyManagement {
	imports {
		mavenBom "org.grails:grails-bom:$grailsVersion"
	}
	applyMavenExclusions false
}

dependencies {
	provided 'org.springframework.boot:spring-boot-starter-logging'
	provided "org.springframework.boot:spring-boot-starter-actuator"
	provided "org.springframework.boot:spring-boot-autoconfigure"
	provided "org.springframework.boot:spring-boot-starter-tomcat"
	provided "org.grails:grails-dependencies"
	provided "org.grails:grails-web-boot"

	compile 'org.grails.plugins:hibernate'
	compile "org.grails.plugins:cache"
	compile "org.hibernate:hibernate-ehcache"

	provided 'javax.servlet:javax.servlet-api:3.1.0'

	testCompile "org.grails:grails-plugin-testing"

	console "org.grails:grails-console"
	compile "org.grails.plugins:joda-time:2.0.0-SNAPSHOT"
}

task wrapper(type: Wrapper) {
	gradleVersion = gradleWrapperVersion
}

bintray {
	user = System.getenv("BINTRAY_USER") ?: project.hasProperty("bintrayUser") ? project.bintrayUser : ''
	key = System.getenv("BINTRAY_KEY") ?: project.hasProperty("bintrayKey") ? project.bintrayKey : ''
	publications = ['maven']
	pkg {
		repo = 'grails-plugins'
		userOrg = 'ctoestreich'
		name = "filterpane"
		desc = "Grails Filterpane Plugin"
		websiteUrl = "http://grails.org/plugin/grails-filterpane"
		issueTrackerUrl = "https://github.com/Grails-Plugin-Consortium/grails-filterpane/issues"
		vcsUrl = "https://github.com/Grails-Plugin-Consortium/grails-filterpane"
		licenses = ['Apache-2.0']
		publicDownloadNumbers = true
	}
}

jar {
	exclude 'org/grails/plugins/filterpane/test/**'
}


bintrayUpload.dependsOn sourcesJar, javadocJar
